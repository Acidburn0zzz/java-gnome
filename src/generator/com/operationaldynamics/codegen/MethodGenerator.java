/*
 * MethodGenerator.java
 *
 * Copyright (c) 2007 Operational Dynamics Consulting Pty Ltd
 * 
 * The code in this file, and the library it is a part of, are made available
 * to you by the authors under the terms of the "GNU General Public Licence,
 * version 2" See the LICENCE file for the terms governing usage and
 * redistribution.
 */
package com.operationaldynamics.codegen;

/**
 * Output the code corresponding to a GObject method definition.
 * 
 * <p>
 * Source .defs data for a constructor is of the following form:
 * 
 * <pre>
 * (define-method set_label
 *   (of-object &quot;GtkButton&quot;)
 *   (c-name &quot;gtk_button_set_label&quot;)
 *   (return-type &quot;none&quot;)
 *   (parameters
 *     '(&quot;const-gchar*&quot; &quot;label&quot;)
 *   )
 * )
 * </pre>
 * 
 * Code generated by this class will be used as:
 * 
 * <pre>
 * public setLabel(String label) {
 *     GtkButton.setLabel(label);
 * }
 * </pre>
 * 
 * in the public API wrapper classes to be written by the bindings hackers.
 * 
 * @author Andrew Cowie
 */
public class MethodGenerator extends FunctionGenerator
{

    /**
     * @param gObjectType
     * @param blockName
     * @param gReturnType
     * @param gFunctionName
     * @param gParameters
     *            a reference to self will be inserted at the head of the
     *            supplied parameter list.
     * 
     */
    public MethodGenerator(final String gObjectType, final String blockName, final String gReturnType,
            final String gFunctionName, final String[][] gParameters) {
        super(gObjectType, blockName, gReturnType, gFunctionName, prependReferenceToSelf(gObjectType,
                gParameters));
    }

    /**
     * Load the reference-to-self that all "method" functions start with onto
     * the beginning of the parameters array.
     */
    static String[][] prependReferenceToSelf(String self, String[][] parameters) {
        String[][] target;

        if (parameters == null) {
            parameters = new String[][] {};
        }
        target = new String[parameters.length + 1][2];
        System.arraycopy(parameters, 0, target, 1, parameters.length);

        target[0][0] = self;
        target[0][1] = "self";

        return target;
    }
}
