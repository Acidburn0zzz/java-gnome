/*
 * GtkButton.c
 *
 * Copyright (c) 2006-2007 Operational Dynamics Consulting Pty Ltd, and Others
 *
 * The code in this file, and the library it is a part of, are made available
 * to you by the authors under the terms of the "GNU General Public Licence,
 * version 2" plus the "Classpath Exception" (you may link to this code as a
 * library into other programs provided you don't make a derivation of it).
 * See the LICENCE file for the terms governing usage and redistribution.
 *
 *                      THIS FILE IS GENERATED CODE!
 *
 * To modify its contents or behaviour, either update the generation program,
 * change the information in the source defs file, or implement an override for
 * this class.
 */

#include <jni.h>
#include <gtk/gtk.h>
#include "bindings_java.h"
#include "org_gnome_gtk_GtkButton.h"

JNIEXPORT jlong JNICALL
Java_org_gnome_gtk_GtkButton_gtk_1button_1get_1image
(
	JNIEnv* env,
	jclass cls,
	jlong _self
)
{
	GtkWidget* result;
	GtkButton* self;
	GError* error;

	// convert parameter self
	self = (GtkButton*) _self;

	// call function
	result = gtk_button_get_image(self, &error);

	// cleanup parameter self

	// check for error
	if (error) {
		bindings_java_throw_gerror(env, error);
		return 0L;
	}

	// and finally
	return (jlong) result;
}

JNIEXPORT void JNICALL
Java_org_gnome_gtk_GtkButton_gtk_1button_1set_1int
(
	JNIEnv* env,
	jclass cls,
	jlong _self,
	jint _i
)
{
	GtkButton* self;
	gint i;
	GError* error;

	// convert parameter self
	self = (GtkButton*) _self;

	// convert parameter i
	i = (gint) _i;

	// call function
	gtk_button_set_int(self, i, &error);

	// cleanup parameter self

	// cleanup parameter i

	// check for error
	if (error) {
		bindings_java_throw_gerror(env, error);
		return;
	}
}
