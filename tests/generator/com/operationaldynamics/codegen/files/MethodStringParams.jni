/*
 * GtkButton.c
 *
 * Copyright (c) 2006-2007 Operational Dynamics Consulting Pty Ltd, and Others
 *
 * The code in this file, and the library it is a part of, are made available
 * to you by the authors under the terms of the "GNU General Public Licence,
 * version 2" plus the "Classpath Exception" (you may link to this code as a
 * library into other programs provided you don't make a derivation of it).
 * See the LICENCE file for the terms governing usage and redistribution.
 *
 *                      THIS FILE IS GENERATED CODE!
 *
 * To modify its contents or behaviour, either update the generation program,
 * change the information in the source defs file, or implement an override for
 * this class.
 */

#include <jni.h>
#include <gtk/gtk.h>
#include "bindings_java.h"
#include "org_gnome_gtk_GtkButton.h"

JNIEXPORT void JNICALL
Java_org_gnome_gtk_GtkButton_gtk_1button_1set_1label
(
	JNIEnv* env,
	jclass cls,
	jlong _self,
	jstring _label
)
{
	GtkButton* self;
	const gchar* label;

	// convert parameter self
	self = (GtkButton*) _self;

	// convert parameter label
	label = (const gchar*) (*env)->GetStringUTFChars(env, _label, NULL);
	if (label == NULL) {
		return; // Java Exception already thrown
	}

	// call function
	gtk_button_set_label(self, label);

	// cleanup parameter self

	// cleanup parameter label
	(*env)->ReleaseStringUTFChars(env, _label, label);
}

JNIEXPORT void JNICALL
Java_org_gnome_gtk_GtkButton_gtk_1button_1set_1label_1nullable
(
	JNIEnv* env,
	jclass cls,
	jlong _self,
	jstring _label,
	jstring _optional
)
{
	GtkButton* self;
	const gchar* label;
	const gchar* optional;

	// convert parameter self
	self = (GtkButton*) _self;

	// convert parameter label
	label = (const gchar*) (*env)->GetStringUTFChars(env, _label, NULL);
	if (label == NULL) {
		return; // Java Exception already thrown
	}

	// convert parameter optional
	if (_optional == NULL) {
		optional = NULL;
	} else {
		optional = (const gchar*) (*env)->GetStringUTFChars(env, _optional, NULL);
		if (optional == NULL) {
			return; // Java Exception already thrown
		}
	}

	// call function
	gtk_button_set_label_nullable(self, label, optional);

	// cleanup parameter self

	// cleanup parameter label
	(*env)->ReleaseStringUTFChars(env, _label, label);

	// cleanup parameter optional
	if (optional != NULL) {
		(*env)->ReleaseStringUTFChars(env, _optional, optional);
	}
}
