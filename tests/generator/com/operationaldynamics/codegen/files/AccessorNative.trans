/*
 * GtkAllocation.java
 *
 * Copyright (c) 2006-2007 Operational Dynamics Consulting Pty Ltd, and Others
 *
 * The code in this file, and the library it is a part of, are made available
 * to you by the authors under the terms of the "GNU General Public Licence,
 * version 2" plus the "Classpath Exception" (you may link to this code as a
 * library into other programs provided you don't make a derivation of it).
 * See the LICENCE file for the terms governing usage and redistribution.
 *
 *                      THIS FILE IS GENERATED CODE!
 *
 * To modify its contents or behaviour, either update the generation program,
 * change the information in the source defs file, or implement an override for
 * this class.
 */
package org.gnome.gtk;

import org.gnome.gtk.Allocation;
import org.gnome.gtk.Plumbing;

final class GtkAllocation extends Plumbing
{
    private GtkAllocation() {}

    static final int getX(Allocation self) {
        int result;

        if (self == null) {
            throw new IllegalArgumentException("Parameter self can't be null");
        }

        synchronized (lock) {
            result = gtk_allocation_get_x(pointerOf(self));

            return result;
        }
    }

    private static native final int gtk_allocation_get_x(long self);

    static final void setX(Allocation self, int x) {

        if (self == null) {
            throw new IllegalArgumentException("Parameter self can't be null");
        }

        synchronized (lock) {
            gtk_allocation_set_x(pointerOf(self), x);
        }
    }

    private static native final void gtk_allocation_set_x(long self, int x);

    static final int getY(Allocation self) {
        int result;

        if (self == null) {
            throw new IllegalArgumentException("Parameter self can't be null");
        }

        synchronized (lock) {
            result = gtk_allocation_get_y(pointerOf(self));

            return result;
        }
    }

    private static native final int gtk_allocation_get_y(long self);

    static final void setY(Allocation self, int y) {

        if (self == null) {
            throw new IllegalArgumentException("Parameter self can't be null");
        }

        synchronized (lock) {
            gtk_allocation_set_y(pointerOf(self), y);
        }
    }

    private static native final void gtk_allocation_set_y(long self, int y);
}

